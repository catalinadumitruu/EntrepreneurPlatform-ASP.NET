@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("Admin"))
    {
        <a id="manage" class="navbar-brand ml-2 btn btn-secondary" asp-controller="Admin" asp-action="Index" title="Manage">Hello @UserManager.GetUserName(User). Go to your account !</a>
    }
    else
    {
        <a id="manage" class="navbar-brand ml-2 btn btn-secondary" asp-controller="User" asp-action="Index" title="Manage">Hello @UserManager.GetUserName(User). Go to your account !</a>
    }
    <form asp-antiforgery="true" id="logoutForm" class="navbar-brand ml-2 form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <button id="logout" type="submit" class="navbar-brand ml-2 btn btn-secondary">Logout</button>
    </form>
}
else
{
    <a class="navbar-brand ml-2 btn btn-secondary" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    <a class="navbar-brand ml-2 btn btn-secondary" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
}

